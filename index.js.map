{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nexport function getImage(imgInfo) {\n  return axios\n    .get('https://pixabay.com/api/', {\n      params: {\n        key: '48844488-dc89d444e3fc14bdb2114dc7c',\n        q: imgInfo,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    })\n    .then(response => {\n      console.log(response);\n      return response.data.hits;\n    })\n    .catch(error => {\n      return [];\n    });\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nexport function make(imagesArr, gallery) {\n  const ulGallery = document.querySelector(gallery);\n  const photos = imagesArr\n    .map(image => {\n      return `\n        <li class=\"gallery-item\">\n            <a class='gallery-link' href=\"${image.largeImageURL}\">\n              <img class=\"li-img\"\n              src=\"${image.webformatURL}\" \n              alt=\"${image.tags}/> \n              <div class=\"li-text\">\n                <table class=\"table\">\n                    <tr><td>Likes</td><td>Views</td><td>Comment</td><td>Downloads</tr>\n                    <tr><td>>${image.likes}</td><td>${image.views}</td><td>${image.comments}</td><td>${image.downloads}</tr>\n                </table>   \n                </div>\n              </a>\n            </li>\n        `;\n    })\n    .join('');\n\n  ulGallery.insertAdjacentHTML('afterbegin', photos);\n\n  const lightbox = new SimpleLightbox(gallery + ' a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n  lightbox.refresh();\n}\n","import { getImage } from './js/pixabay-api.js';\nimport { make } from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form-find-img');\nconst message = document.querySelector('.message');\nconst gallery = document.querySelector('.gallery');\nconst input = document.querySelector('.enter-img');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  message.innerHTML = 'Wait, the image is loaded';\n  const searchQuery = input.value.trim();\n  console.log(searchQuery);\n  gallery.innerHTML = '';\n  getImage(searchQuery)\n    .then(images => {\n      if (images.length > 0) {\n        make(images, '.gallery');\n      } else {\n        iziToast.error({\n          position: 'topRight',\n          message: `Sorry, there are no images matching your search ${searchQuery}. Please try again!`,\n        });\n      }\n      message.textContent = '';\n    })\n    .catch(errror => {\n      gallery.innerHTML = '';\n    });\n});\n"],"names":["getImage","imgInfo","axios","response","error","make","imagesArr","gallery","ulGallery","photos","image","SimpleLightbox","form","message","input","e","searchQuery","images","iziToast","errror"],"mappings":"owBAEO,SAASA,EAASC,EAAS,CAChC,OAAOC,EACJ,IAAI,2BAA4B,CAC/B,OAAQ,CACN,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,EACA,KAAKE,IACJ,QAAQ,IAAIA,CAAQ,EACbA,EAAS,KAAK,KACtB,EACA,MAAMC,GACE,EACR,CACL,CCjBO,SAASC,EAAKC,EAAWC,EAAS,CACvC,MAAMC,EAAY,SAAS,cAAcD,CAAO,EAC1CE,EAASH,EACZ,IAAII,GACI;AAAA;AAAA,4CAE+BA,EAAM,aAAa;AAAA;AAAA,qBAE1CA,EAAM,YAAY;AAAA,qBAClBA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA,+BAIAA,EAAM,KAAK,YAAYA,EAAM,KAAK,YAAYA,EAAM,QAAQ,YAAYA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,SAMjH,EACA,KAAK,EAAE,EAEVF,EAAU,mBAAmB,aAAcC,CAAM,EAEhC,IAAIE,EAAeJ,EAAU,KAAM,CAClD,aAAc,MACd,aAAc,GAClB,CAAG,EACQ,QAAO,CAClB,CC3BA,MAAMK,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAU,SAAS,cAAc,UAAU,EAC3CN,EAAU,SAAS,cAAc,UAAU,EAC3CO,EAAQ,SAAS,cAAc,YAAY,EAEjDF,EAAK,iBAAiB,SAAUG,GAAK,CACnCA,EAAE,eAAc,EAChBF,EAAQ,UAAY,4BACpB,MAAMG,EAAcF,EAAM,MAAM,KAAI,EACpC,QAAQ,IAAIE,CAAW,EACvBT,EAAQ,UAAY,GACpBP,EAASgB,CAAW,EACjB,KAAKC,GAAU,CACVA,EAAO,OAAS,EAClBZ,EAAKY,EAAQ,UAAU,EAEvBC,EAAS,MAAM,CACb,SAAU,WACV,QAAS,mDAAmDF,CAAW,qBACjF,CAAS,EAEHH,EAAQ,YAAc,EAC5B,CAAK,EACA,MAAMM,GAAU,CACfZ,EAAQ,UAAY,EAC1B,CAAK,CACL,CAAC"}